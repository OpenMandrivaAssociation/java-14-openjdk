diff -up openjdk/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_convert.c.omv~ openjdk/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_convert.c
--- openjdk/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_convert.c.omv~	2020-03-20 21:33:30.224756571 +0100
+++ openjdk/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_convert.c	2020-03-20 21:36:56.965406386 +0100
@@ -721,7 +721,7 @@ jTlsMacParamsToCKTlsMacParamPtr(JNIEnv *
     }
 
     // populate using java values
-    ckParamPtr->prfHashMechanism = jLongToCKULong(jPrfMechanism);
+    ckParamPtr->prfMechanism = jLongToCKULong(jPrfMechanism);
     ckParamPtr->ulMacLength = jLongToCKULong(jUlMacLength);
     ckParamPtr->ulServerOrClient = jLongToCKULong(jUlServerOrClient);
 
@@ -1471,7 +1471,7 @@ CK_VOID_PTR jMechParamToCKMechParamPtrSl
             ckpParamPtr = jX942Dh2DeriveParamToCKX942Dh2DeriveParamPtr(env, jParam, ckpLength);
             break;
         // defined by pkcs11.h but we don't support
-        case CKM_KEA_DERIVE: // CK_KEA_DERIVE_PARAMS
+        case CKM_KEA_KEY_DERIVE: // CK_KEA_DERIVE_PARAMS
         case CKM_RC2_CBC: // CK_RC2_CBC_PARAMS
         case CKM_RC2_MAC_GENERAL: // CK_RC2_MAC_GENERAL_PARAMS
         case CKM_RC5_ECB: // CK_RC5_PARAMS
diff -up openjdk/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_util.c.omv~ openjdk/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_util.c
--- openjdk/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_util.c.omv~	2020-03-20 21:38:29.940812889 +0100
+++ openjdk/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_util.c	2020-03-20 21:41:05.733832533 +0100
@@ -381,7 +381,7 @@ void freeCKMechanismPtr(CK_MECHANISM_PTR
                  case CKM_TLS_MAC:
                  case CKM_AES_CTR:
                  case CKM_RSA_PKCS_PSS:
-                 case CKM_CAMELLIA_CTR:
+                 case CKM_CAMELLIA_CBC:
                      // params do not contain pointers
                      break;
                  default:
@@ -429,7 +429,7 @@ CK_MECHANISM_PTR updateGCMParams(JNIEnv
         pParams = (CK_GCM_PARAMS_NO_IVBITS*) mechPtr->pParameter;
         pGcmParams2->pIv = pParams->pIv;
         pGcmParams2->ulIvLen = pParams->ulIvLen;
-        pGcmParams2->ulIvBits = (pGcmParams2->ulIvLen << 3);
+//        pGcmParams2->ulIvBits = (pGcmParams2->ulIvLen << 3);
         pGcmParams2->pAAD = pParams->pAAD;
         pGcmParams2->ulAADLen = pParams->ulAADLen;
         pGcmParams2->ulTagBits = pParams->ulTagBits;
